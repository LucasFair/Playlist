using Playlist.View;
using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Playlist.Model
{
	/// <summary>
	/// Class <c>PlaylistInput</c> contains all the input data that the application, and ties directly into PlaylistController.
	/// </summary>
	public class PlaylistInput
	{
		PlaylistGUI GUI = new PlaylistGUI();
		Model.cMaker pList = new Model.cMaker();
		public ConsoleKey WaitForInput()
		{
			var key = Console.ReadKey(true).Key;
			return key;
		}

		public void CreateAnotherPlaylist()
		{
			while (true)
			{
				var selectIn = Console.ReadKey(true).Key;
				switch (selectIn)
				{
					case ConsoleKey.Y:
						GUI.ClearConsole();
						GUI.EnterNameForPlaylist();
						pList.AddPlaylist();
						GUI.ClearConsole();
						GUI.TestPrintPlaylist(pList.PlaylistList());
						GUI.AnyKeyToContinue();
						WaitForInput();
						GUI.ClearConsole();
						GUI.AddAnotherPlaylistPrompt();
						CreateAnotherPlaylist();
						break;

					case ConsoleKey.N:
						GUI.ClearConsole();
						GUI.MainMenu();
						MainMenuSelection();
						break;
					default:
						break;
				}
			}
		}

		public void MainMenuSelection()
		{
			while (true)
			{
				var selectIn = Console.ReadKey(true).Key;
				switch (selectIn)
				{
					case ConsoleKey.D1:
						GUI.ClearConsole();
						GUI.PlaylistMenu();
						PlaylistMenuSelection();
						break;
					case ConsoleKey.D2:
						GUI.ClearConsole();
						GUI.TestPrintListContent(pList.Tracklist());
						break;
					case ConsoleKey.D0:
						Environment.Exit(0);
						break;
					default:
						break;

				}
			}
		}
		public void PlaylistMenuSelection()
		{
			while (true)
			{
				var selectIn = Console.ReadKey(true).Key;
				switch (selectIn)
				{
					case ConsoleKey.D1:
						GUI.ClearConsole();
						GUI.EnterNameForPlaylist();
						pList.AddPlaylist();
						GUI.ClearConsole();
						GUI.TestPrintPlaylist(pList.PlaylistList());
						GUI.AnyKeyToContinue();
						WaitForInput();
						GUI.ClearConsole();
						GUI.AddAnotherPlaylistPrompt();
						CreateAnotherPlaylist();
						break;
					case ConsoleKey.D2:
						GUI.ClearConsole();
						GUI.TestPrintPlaylist(pList.PlaylistList());
						GUI.AnyKeyToContinue();
						WaitForInput();
						break;
					case ConsoleKey.Backspace:
						GUI.ClearConsole();
						GUI.MainMenu();
						MainMenuSelection();
						break;
					default:
						break;
				}
			}
		}
	}
}
